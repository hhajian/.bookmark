#!/bin/bash

# some parameters
HOME_DIR=$HOME/.bookmark
COMMAND_FILE=$HOME/.bookmark/commands.yml


function add_command
{
## Check if the command is specified
if [ -z "$COMPLETE_COMMANDLINE" ];
then
  printf "\nPlease specify the command. Going to die now....\n\n"
  exit 1;
fi

#echo $COMPLETE_COMMANDLINE

## Check if the description is given
if [ -z "$COMMAND_DESCRIPTION" ];
then
  printf "\nPlease provide description for the command or press N to continue without description\n"
  read INPUT
  echo "$INPUT"
  if [[ $INPUT != "N" ]];
  then
    printf "Description:\n\n"
    read DESCRIPTION
    COMMAND_DESCRIPTION=$DESCRIPTION
  fi	
fi

printf "\n%s\t#%s" "$COMPLETE_COMMANDLINE" "$COMMAND_DESCRIPTION" >> $COMMAND_FILE

}


function search_command
{
## Check if the command is specified
if [ -z "$COMMAND_TO_SEARCH" ];
then
  printf "\nPlease specify the command to be looled up. Going to die now....\n\n"
  exit 1;
fi

}


function commit_repo
{
cd $HOME_DIR
git commit -a -m "Updating repo"
git push origin master
}


function update_repo
{
cd $HOME_DIR
git pull

}

case $1 in
  -a|--add)
    COMPLETE_COMMANDLINE="$2"
    COMMAND_DESCRIPTION="$3"
    add_command "$COMPLETE_COMMANDLINE" "$COMMAND_DESCRIPTION"
    ;;

  -c|--commit)
    commit_repo
    ;;

  -s|--search)
    COMMAND_TO_SEARCH="$2"
    search_command "$COMMAND_TO_SEARCH"
    ;;

  -u|--update)
    update_repo
    ;;

  *|-h|--help)
    printf "\nUsage: \n\t -a|--add        # Add command to bookmark list. This option accept two arguments: \"Compelete command line\" and \"Description of the command\"
		     \n\t -c|--commit     # Commit local changes to repository
		     \n\t -s|--search     # Search for a command. This option accepts one argument: \"Command to be looked up\"
		     \n\t -u|--update     # Update local repository
		     \n"
esac
